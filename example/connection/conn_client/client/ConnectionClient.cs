/** 
 * Generated by erpcgen 1.13.0 on Mon Jul 22 20:53:21 2024.
 * 
 * AUTOGENERATED - DO NOT EDIT
 */


using iCNC.Servo.Connection.interfaces;

using iCNC.Servo.Connection.common.enums;
using io.github.embeddedrpc.erpc.auxiliary;
using io.github.embeddedrpc.erpc.client;
using io.github.embeddedrpc.erpc.codec;

using System.Collections.Generic;

namespace iCNC.Servo.Connection.client;

public class ConnectionClient : IConnection
{
    private readonly ClientManager clientManager;
    private static readonly int SERVICE_ID = 1;
    private static readonly int ISALIVE_ID = 1;

    public ConnectionClient(ClientManager clientManager)
    {
        this.clientManager = clientManager;
    }

    public void IsAlive(Heartbeat req, Reference<Heartbeat> rep)
    {
        // Create request
        RequestContext request = clientManager.createRequest(false);
        Codec codec = request.codec;

        // Write message info
        codec.startWriteMessage(new MessageInfo(
                MessageType.kInvocationMessage,
                SERVICE_ID,
                ISALIVE_ID,
                request.sequence));

        // Write message data
        Utils.checkNotNull(req, "req is null");

        codec.writeInt32((int)req);

        // Perform request
        clientManager.performRequest(request);

        // Read out parameters
        rep.set((Heartbeat)codec.readInt32());
    }
}
