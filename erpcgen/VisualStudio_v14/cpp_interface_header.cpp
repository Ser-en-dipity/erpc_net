/*
 * AUTOMATICALLY GENERATED FILE - DO NOT EDIT
 */

// Generated from ..\src\templates\cpp_interface_header.template
extern const char * const kCppInterfaceHeader;

const char * const kCppInterfaceHeader = 
"{% if mlComment != \"\" %}\n"
"{$mlComment}\n"
"\n"
"{% endif %}\n"
"{$commonHeader()}\n"
"\n"
"#if !defined({$interfaceCppGuardMacro})\n"
"#define {$interfaceCppGuardMacro}\n"
"\n"
"#include \"{$commonCppHeaderName}\"\n"
"{% for iface in group.interfaces %}\n"
"{%  for fn in iface.functions %}\n"
"{%   for externalInterface in fn.externalInterfaces %}\n"
"{%    for interfaceFile in interfacesFiles %}\n"
"{%     if externalInterface == interfaceFile.interfaceName %}\n"
"#include \"{$interfaceFile.interfaceCommonFileName}_interface.hpp\"\n"
"{%     endif %}\n"
"{%    endfor -- interfacesFiles %}\n"
"{%   endfor -- externalInterface %}\n"
"{%  endfor -- fn %}\n"
"{% endfor -- iface %}\n"
"{$fillNamespaceBegin()}\n"
"{% for iface in group.interfaces %}\n"
"\n"
"// Abstract base class for {$iface.name}\n"
"class {$iface.interfaceClassName}\n"
"{\n"
"    public:\n"
"{%if count(iface.callbacksInt) > 0%}\n"
"{% for cb in iface.callbacksInt%}\n"
"        typedef {$cb.interfaceTypenameName};\n"
"{% endfor %}\n"
"\n"
"{%endif %}\n"
"        static const uint8_t m_serviceId = {$iface.id};\n"
"{% for fn in iface.functions %}\n"
"        static const uint8_t {$getClassFunctionIdName(fn)} = {$fn.id};\n"
"{% endfor -- fn %}\n"
"\n"
"        virtual ~{$iface.interfaceClassName}(void);\n"
"{% for fn in iface.functions if fn.isNonExternalFunction == true %}\n"
"\n"
"{% if fn.mlComment %}\n"
"        {$fn.mlComment}\n"
"{% endif %}\n"
"        virtual {$fn.prototypeInterface} = 0;\n"
"{% endfor -- fn %}\n"
"{% for cb in iface.callbacksInt %}\n"
"\n"
"       static bool get_callbackAddress_{$cb.name}(uint16_t index, {$cb.name} *callback);\n"
"       static bool get_callbackIdx_{$cb.name}(const {$cb.name} *callback, uint16_t &index);\n"
"{% endfor %}\n"
"private:\n"
"{% for cb in iface.callbacksInt %}\n"
"        static {$cb.name} _{$cb.name}[{$count(cb.callbacks)}];\n"
"{% endfor %}\n"
"};\n"
"{% endfor -- iface %}\n"
"{$fillNamespaceEnd()}\n"
"#endif // {$interfaceCppGuardMacro}\n"
;

